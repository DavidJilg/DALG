# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'MainWindow.ui'
##
## Created by: Qt User Interface Compiler version 6.4.0
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QApplication, QCheckBox, QComboBox, QDateTimeEdit,
    QFrame, QGroupBox, QLabel, QLineEdit,
    QMainWindow, QMenu, QMenuBar, QPlainTextEdit,
    QProgressBar, QPushButton, QScrollArea, QSizePolicy,
    QSpinBox, QTimeEdit, QToolButton, QVBoxLayout,
    QWidget)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.resize(1360, 768)
        MainWindow.setMinimumSize(QSize(1360, 768))
        MainWindow.setMaximumSize(QSize(1360, 768))
        self.actionLoad_PnmlFile = QAction(MainWindow)
        self.actionLoad_PnmlFile.setObjectName(u"actionLoad_PnmlFile")
        font = QFont()
        font.setPointSize(11)
        self.actionLoad_PnmlFile.setFont(font)
        self.actionExit = QAction(MainWindow)
        self.actionExit.setObjectName(u"actionExit")
        self.actionAbout = QAction(MainWindow)
        self.actionAbout.setObjectName(u"actionAbout")
        self.actionRun_Simulation = QAction(MainWindow)
        self.actionRun_Simulation.setObjectName(u"actionRun_Simulation")
        self.actionSafe_Configuration = QAction(MainWindow)
        self.actionSafe_Configuration.setObjectName(u"actionSafe_Configuration")
        self.actionLoad_Configuration = QAction(MainWindow)
        self.actionLoad_Configuration.setObjectName(u"actionLoad_Configuration")
        self.actionOpen_User_Manual = QAction(MainWindow)
        self.actionOpen_User_Manual.setObjectName(u"actionOpen_User_Manual")
        self.actionShow_Welcome_Screen_Again = QAction(MainWindow)
        self.actionShow_Welcome_Screen_Again.setObjectName(u"actionShow_Welcome_Screen_Again")
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.label_trans_config = QLabel(self.centralwidget)
        self.label_trans_config.setObjectName(u"label_trans_config")
        self.label_trans_config.setGeometry(QRect(1015, 145, 191, 31))
        font1 = QFont()
        font1.setPointSize(13)
        self.label_trans_config.setFont(font1)
        self.transition_config = QScrollArea(self.centralwidget)
        self.transition_config.setObjectName(u"transition_config")
        self.transition_config.setGeometry(QRect(886, 174, 450, 561))
        self.transition_config.setFrameShape(QFrame.Box)
        self.transition_config.setFrameShadow(QFrame.Raised)
        self.transition_config.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
        self.transition_config.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOff)
        self.transition_config.setWidgetResizable(True)
        self.scrollAreaWidgetContents = QWidget()
        self.scrollAreaWidgetContents.setObjectName(u"scrollAreaWidgetContents")
        self.scrollAreaWidgetContents.setGeometry(QRect(0, 0, 429, 557))
        self.general_config_2 = QGroupBox(self.scrollAreaWidgetContents)
        self.general_config_2.setObjectName(u"general_config_2")
        self.general_config_2.setGeometry(QRect(10, 10, 411, 651))
        font2 = QFont()
        font2.setPointSize(12)
        self.general_config_2.setFont(font2)
        self.general_config_2.setAutoFillBackground(False)
        self.general_config_2.setFlat(False)
        self.general_config_2.setCheckable(False)
        self.avg_trans_delay = QWidget(self.general_config_2)
        self.avg_trans_delay.setObjectName(u"avg_trans_delay")
        self.avg_trans_delay.setGeometry(QRect(20, 117, 391, 25))
        self.output_dir_label_16 = QLabel(self.avg_trans_delay)
        self.output_dir_label_16.setObjectName(u"output_dir_label_16")
        self.output_dir_label_16.setGeometry(QRect(0, 0, 191, 21))
        self.output_dir_label_16.setFont(font2)
        self.output_dir_label_16.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.avg_trans_delay_time_input = QTimeEdit(self.avg_trans_delay)
        self.avg_trans_delay_time_input.setObjectName(u"avg_trans_delay_time_input")
        self.avg_trans_delay_time_input.setGeometry(QRect(300, 0, 81, 25))
        self.avg_trans_delay_time_input.setFont(font)
        self.avg_trans_delay_time_input.setMinimumTime(QTime(0, 0, 0))
        self.avg_trans_delay_time_input.setTime(QTime(0, 0, 0))
        self.avg_trans_delay_days_input = QSpinBox(self.avg_trans_delay)
        self.avg_trans_delay_days_input.setObjectName(u"avg_trans_delay_days_input")
        self.avg_trans_delay_days_input.setGeometry(QRect(230, 0, 51, 25))
        self.avg_trans_delay_days_input.setFont(font)
        self.avg_trans_delay_days_input.setMinimum(0)
        self.avg_trans_delay_days_input.setMaximum(10000)
        self.avg_trans_delay_days_input.setValue(0)
        self.time_delay_sd = QWidget(self.general_config_2)
        self.time_delay_sd.setObjectName(u"time_delay_sd")
        self.time_delay_sd.setGeometry(QRect(20, 148, 391, 25))
        self.output_dir_label_18 = QLabel(self.time_delay_sd)
        self.output_dir_label_18.setObjectName(u"output_dir_label_18")
        self.output_dir_label_18.setGeometry(QRect(30, 0, 181, 21))
        self.output_dir_label_18.setFont(font2)
        self.output_dir_label_18.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.time_delay_sd_days_input = QSpinBox(self.time_delay_sd)
        self.time_delay_sd_days_input.setObjectName(u"time_delay_sd_days_input")
        self.time_delay_sd_days_input.setGeometry(QRect(230, 0, 51, 25))
        self.time_delay_sd_days_input.setFont(font)
        self.time_delay_sd_days_input.setMinimum(0)
        self.time_delay_sd_days_input.setMaximum(10000)
        self.time_delay_sd_days_input.setValue(0)
        self.time_delay_sd_time_input = QTimeEdit(self.time_delay_sd)
        self.time_delay_sd_time_input.setObjectName(u"time_delay_sd_time_input")
        self.time_delay_sd_time_input.setGeometry(QRect(300, 0, 81, 25))
        self.time_delay_sd_time_input.setFont(font)
        self.time_delay_sd_time_input.setMinimumTime(QTime(0, 0, 1))
        self.time_delay_sd_time_input.setTime(QTime(0, 0, 1))
        self.delay_time_delay_minimum = QWidget(self.general_config_2)
        self.delay_time_delay_minimum.setObjectName(u"delay_time_delay_minimum")
        self.delay_time_delay_minimum.setGeometry(QRect(20, 179, 391, 25))
        self.output_dir_label_20 = QLabel(self.delay_time_delay_minimum)
        self.output_dir_label_20.setObjectName(u"output_dir_label_20")
        self.output_dir_label_20.setGeometry(QRect(30, 0, 191, 21))
        self.output_dir_label_20.setFont(font2)
        self.output_dir_label_20.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.time_delay_minimum_days_input = QSpinBox(self.delay_time_delay_minimum)
        self.time_delay_minimum_days_input.setObjectName(u"time_delay_minimum_days_input")
        self.time_delay_minimum_days_input.setGeometry(QRect(230, 0, 51, 25))
        self.time_delay_minimum_days_input.setFont(font)
        self.time_delay_minimum_days_input.setMinimum(0)
        self.time_delay_minimum_days_input.setMaximum(10000)
        self.time_delay_minimum_days_input.setValue(0)
        self.time_delay_minimum_time_input = QTimeEdit(self.delay_time_delay_minimum)
        self.time_delay_minimum_time_input.setObjectName(u"time_delay_minimum_time_input")
        self.time_delay_minimum_time_input.setGeometry(QRect(300, 0, 81, 25))
        self.time_delay_minimum_time_input.setFont(font)
        self.delay_time_delay_maximum = QWidget(self.general_config_2)
        self.delay_time_delay_maximum.setObjectName(u"delay_time_delay_maximum")
        self.delay_time_delay_maximum.setGeometry(QRect(20, 210, 391, 25))
        self.output_dir_label_19 = QLabel(self.delay_time_delay_maximum)
        self.output_dir_label_19.setObjectName(u"output_dir_label_19")
        self.output_dir_label_19.setGeometry(QRect(30, 0, 141, 21))
        self.output_dir_label_19.setFont(font2)
        self.output_dir_label_19.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.time_delay_maximum_time_input = QTimeEdit(self.delay_time_delay_maximum)
        self.time_delay_maximum_time_input.setObjectName(u"time_delay_maximum_time_input")
        self.time_delay_maximum_time_input.setGeometry(QRect(300, 0, 81, 25))
        self.time_delay_maximum_time_input.setFont(font)
        self.time_delay_maximum_time_input.setMinimumTime(QTime(0, 0, 1))
        self.time_delay_maximum_time_input.setTime(QTime(0, 0, 1))
        self.time_delay_maximum_days_input = QSpinBox(self.delay_time_delay_maximum)
        self.time_delay_maximum_days_input.setObjectName(u"time_delay_maximum_days_input")
        self.time_delay_maximum_days_input.setGeometry(QRect(230, 0, 51, 25))
        self.time_delay_maximum_days_input.setFont(font)
        self.time_delay_maximum_days_input.setMinimum(0)
        self.time_delay_maximum_days_input.setMaximum(10000)
        self.time_delay_maximum_days_input.setValue(0)
        self.hours_min_sec = QLabel(self.general_config_2)
        self.hours_min_sec.setObjectName(u"hours_min_sec")
        self.hours_min_sec.setGeometry(QRect(310, 90, 101, 23))
        self.hours_min_sec.setFont(font)
        self.hours_min_sec.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.days = QLabel(self.general_config_2)
        self.days.setObjectName(u"days")
        self.days.setGeometry(QRect(255, 90, 41, 23))
        self.days.setFont(font)
        self.days.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.lead_time_delay_maximum = QWidget(self.general_config_2)
        self.lead_time_delay_maximum.setObjectName(u"lead_time_delay_maximum")
        self.lead_time_delay_maximum.setGeometry(QRect(20, 352, 391, 25))
        self.output_dir_label_28 = QLabel(self.lead_time_delay_maximum)
        self.output_dir_label_28.setObjectName(u"output_dir_label_28")
        self.output_dir_label_28.setGeometry(QRect(30, 0, 171, 21))
        self.output_dir_label_28.setFont(font2)
        self.output_dir_label_28.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.time_lead_maximum_time_input = QTimeEdit(self.lead_time_delay_maximum)
        self.time_lead_maximum_time_input.setObjectName(u"time_lead_maximum_time_input")
        self.time_lead_maximum_time_input.setGeometry(QRect(300, 0, 81, 25))
        self.time_lead_maximum_time_input.setFont(font)
        self.time_lead_maximum_time_input.setMinimumTime(QTime(0, 0, 1))
        self.time_lead_maximum_time_input.setTime(QTime(0, 0, 1))
        self.time_lead_maximum_days_input = QSpinBox(self.lead_time_delay_maximum)
        self.time_lead_maximum_days_input.setObjectName(u"time_lead_maximum_days_input")
        self.time_lead_maximum_days_input.setGeometry(QRect(230, 0, 51, 25))
        self.time_lead_maximum_days_input.setFont(font)
        self.time_lead_maximum_days_input.setMinimum(0)
        self.time_lead_maximum_days_input.setMaximum(10000)
        self.time_lead_maximum_days_input.setValue(0)
        self.lead_time_delay_minimum = QWidget(self.general_config_2)
        self.lead_time_delay_minimum.setObjectName(u"lead_time_delay_minimum")
        self.lead_time_delay_minimum.setGeometry(QRect(20, 321, 391, 25))
        self.output_dir_label_29 = QLabel(self.lead_time_delay_minimum)
        self.output_dir_label_29.setObjectName(u"output_dir_label_29")
        self.output_dir_label_29.setGeometry(QRect(30, 0, 161, 21))
        self.output_dir_label_29.setFont(font2)
        self.output_dir_label_29.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.time_lead_minimum_days_input = QSpinBox(self.lead_time_delay_minimum)
        self.time_lead_minimum_days_input.setObjectName(u"time_lead_minimum_days_input")
        self.time_lead_minimum_days_input.setGeometry(QRect(230, 0, 51, 25))
        self.time_lead_minimum_days_input.setFont(font)
        self.time_lead_minimum_days_input.setMinimum(0)
        self.time_lead_minimum_days_input.setMaximum(10000)
        self.time_lead_minimum_days_input.setValue(0)
        self.time_lead_minimum_time_input = QTimeEdit(self.lead_time_delay_minimum)
        self.time_lead_minimum_time_input.setObjectName(u"time_lead_minimum_time_input")
        self.time_lead_minimum_time_input.setGeometry(QRect(300, 0, 81, 25))
        self.time_lead_minimum_time_input.setFont(font)
        self.avg_trans_delay_3 = QWidget(self.general_config_2)
        self.avg_trans_delay_3.setObjectName(u"avg_trans_delay_3")
        self.avg_trans_delay_3.setGeometry(QRect(20, 259, 391, 25))
        self.output_dir_label_30 = QLabel(self.avg_trans_delay_3)
        self.output_dir_label_30.setObjectName(u"output_dir_label_30")
        self.output_dir_label_30.setGeometry(QRect(0, 0, 191, 21))
        self.output_dir_label_30.setFont(font2)
        self.output_dir_label_30.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.avg_trans_lead_time_input = QTimeEdit(self.avg_trans_delay_3)
        self.avg_trans_lead_time_input.setObjectName(u"avg_trans_lead_time_input")
        self.avg_trans_lead_time_input.setGeometry(QRect(300, 0, 81, 25))
        self.avg_trans_lead_time_input.setFont(font)
        self.avg_trans_lead_time_input.setMinimumTime(QTime(0, 0, 0))
        self.avg_trans_lead_time_input.setTime(QTime(0, 0, 0))
        self.avg_trans_lead_days_input = QSpinBox(self.avg_trans_delay_3)
        self.avg_trans_lead_days_input.setObjectName(u"avg_trans_lead_days_input")
        self.avg_trans_lead_days_input.setGeometry(QRect(230, 0, 51, 25))
        self.avg_trans_lead_days_input.setFont(font)
        self.avg_trans_lead_days_input.setMinimum(0)
        self.avg_trans_lead_days_input.setMaximum(10000)
        self.avg_trans_lead_days_input.setValue(0)
        self.lead_time_sd = QWidget(self.general_config_2)
        self.lead_time_sd.setObjectName(u"lead_time_sd")
        self.lead_time_sd.setGeometry(QRect(20, 290, 391, 25))
        self.output_dir_label_27 = QLabel(self.lead_time_sd)
        self.output_dir_label_27.setObjectName(u"output_dir_label_27")
        self.output_dir_label_27.setGeometry(QRect(30, 0, 181, 21))
        self.output_dir_label_27.setFont(font2)
        self.output_dir_label_27.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.time_lead_sd_days_input = QSpinBox(self.lead_time_sd)
        self.time_lead_sd_days_input.setObjectName(u"time_lead_sd_days_input")
        self.time_lead_sd_days_input.setGeometry(QRect(230, 0, 51, 25))
        self.time_lead_sd_days_input.setFont(font)
        self.time_lead_sd_days_input.setMinimum(0)
        self.time_lead_sd_days_input.setMaximum(10000)
        self.time_lead_sd_days_input.setValue(0)
        self.time_lead_sd_time_input = QTimeEdit(self.lead_time_sd)
        self.time_lead_sd_time_input.setObjectName(u"time_lead_sd_time_input")
        self.time_lead_sd_time_input.setGeometry(QRect(300, 0, 81, 25))
        self.time_lead_sd_time_input.setFont(font)
        self.time_lead_sd_time_input.setMinimumTime(QTime(0, 0, 1))
        self.time_lead_sd_time_input.setTime(QTime(0, 0, 1))
        self.include_invisible_transitions = QWidget(self.general_config_2)
        self.include_invisible_transitions.setObjectName(u"include_invisible_transitions")
        self.include_invisible_transitions.setGeometry(QRect(10, 30, 391, 22))
        self.output_dir_label_26 = QLabel(self.include_invisible_transitions)
        self.output_dir_label_26.setObjectName(u"output_dir_label_26")
        self.output_dir_label_26.setGeometry(QRect(0, 0, 301, 21))
        self.output_dir_label_26.setFont(font2)
        self.output_dir_label_26.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.include_invisible_transitions_input = QCheckBox(self.include_invisible_transitions)
        self.include_invisible_transitions_input.setObjectName(u"include_invisible_transitions_input")
        self.include_invisible_transitions_input.setGeometry(QRect(310, 0, 31, 23))
        self.include_invisible_transitions_input.setChecked(False)
        self.include_microseconds = QWidget(self.general_config_2)
        self.include_microseconds.setObjectName(u"include_microseconds")
        self.include_microseconds.setGeometry(QRect(10, 60, 391, 22))
        self.output_dir_label_33 = QLabel(self.include_microseconds)
        self.output_dir_label_33.setObjectName(u"output_dir_label_33")
        self.output_dir_label_33.setGeometry(QRect(0, 0, 301, 21))
        self.output_dir_label_33.setFont(font2)
        self.output_dir_label_33.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.timestamp_millieseconds_input = QCheckBox(self.include_microseconds)
        self.timestamp_millieseconds_input.setObjectName(u"timestamp_millieseconds_input")
        self.timestamp_millieseconds_input.setGeometry(QRect(310, 0, 31, 23))
        self.timestamp_millieseconds_input.setChecked(False)
        self.variance_input = QCheckBox(self.general_config_2)
        self.variance_input.setObjectName(u"variance_input")
        self.variance_input.setGeometry(QRect(240, 570, 161, 23))
        self.time_intervals_input = QPlainTextEdit(self.general_config_2)
        self.time_intervals_input.setObjectName(u"time_intervals_input")
        self.time_intervals_input.setGeometry(QRect(10, 410, 391, 141))
        self.initial_value_label_7 = QLabel(self.general_config_2)
        self.initial_value_label_7.setObjectName(u"initial_value_label_7")
        self.initial_value_label_7.setGeometry(QRect(10, 570, 221, 21))
        self.initial_value_label_7.setFont(font2)
        self.initial_value_label_7.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.initial_value_label_8 = QLabel(self.general_config_2)
        self.initial_value_label_8.setObjectName(u"initial_value_label_8")
        self.initial_value_label_8.setGeometry(QRect(10, 600, 221, 21))
        self.initial_value_label_8.setFont(font2)
        self.initial_value_label_8.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.max_variance_input = QSpinBox(self.general_config_2)
        self.max_variance_input.setObjectName(u"max_variance_input")
        self.max_variance_input.setGeometry(QRect(240, 600, 161, 25))
        self.max_variance_input.setMaximum(10000)
        self.output_dir_label_39 = QLabel(self.general_config_2)
        self.output_dir_label_39.setObjectName(u"output_dir_label_39")
        self.output_dir_label_39.setGeometry(QRect(10, 383, 381, 21))
        self.output_dir_label_39.setFont(font2)
        self.output_dir_label_39.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.transition_config.setWidget(self.scrollAreaWidgetContents)
        self.label_general_config = QLabel(self.centralwidget)
        self.label_general_config.setObjectName(u"label_general_config")
        self.label_general_config.setGeometry(QRect(120, 108, 171, 31))
        self.label_general_config.setFont(font1)
        self.label_sim_config = QLabel(self.centralwidget)
        self.label_sim_config.setObjectName(u"label_sim_config")
        self.label_sim_config.setGeometry(QRect(110, 323, 201, 31))
        self.label_sim_config.setFont(font1)
        self.general_config = QScrollArea(self.centralwidget)
        self.general_config.setObjectName(u"general_config")
        self.general_config.setGeometry(QRect(20, 138, 371, 181))
        self.general_config.setFrameShape(QFrame.Box)
        self.general_config.setFrameShadow(QFrame.Raised)
        self.general_config.setLineWidth(1)
        self.general_config.setWidgetResizable(True)
        self.scrollAreaWidgetContents_4 = QWidget()
        self.scrollAreaWidgetContents_4.setObjectName(u"scrollAreaWidgetContents_4")
        self.scrollAreaWidgetContents_4.setGeometry(QRect(0, 0, 367, 177))
        self.verticalLayout_2 = QVBoxLayout(self.scrollAreaWidgetContents_4)
        self.verticalLayout_2.setObjectName(u"verticalLayout_2")
        self.widget_2 = QWidget(self.scrollAreaWidgetContents_4)
        self.widget_2.setObjectName(u"widget_2")
        self.output_path_input = QLineEdit(self.widget_2)
        self.output_path_input.setObjectName(u"output_path_input")
        self.output_path_input.setGeometry(QRect(130, 0, 161, 25))
        self.output_path_input.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.output_dir_label = QLabel(self.widget_2)
        self.output_dir_label.setObjectName(u"output_dir_label")
        self.output_dir_label.setGeometry(QRect(0, 0, 121, 21))
        self.output_dir_label.setFont(font2)
        self.output_dir_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.set_output_dir_button = QPushButton(self.widget_2)
        self.set_output_dir_button.setObjectName(u"set_output_dir_button")
        self.set_output_dir_button.setGeometry(QRect(300, 0, 41, 27))

        self.verticalLayout_2.addWidget(self.widget_2)

        self.widget_3 = QWidget(self.scrollAreaWidgetContents_4)
        self.widget_3.setObjectName(u"widget_3")
        self.file_name_input = QLineEdit(self.widget_3)
        self.file_name_input.setObjectName(u"file_name_input")
        self.file_name_input.setGeometry(QRect(130, 0, 211, 25))
        self.file_name_input.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.output_dir_label_3 = QLabel(self.widget_3)
        self.output_dir_label_3.setObjectName(u"output_dir_label_3")
        self.output_dir_label_3.setGeometry(QRect(0, 0, 121, 21))
        self.output_dir_label_3.setFont(font2)
        self.output_dir_label_3.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)

        self.verticalLayout_2.addWidget(self.widget_3)

        self.widget_4 = QWidget(self.scrollAreaWidgetContents_4)
        self.widget_4.setObjectName(u"widget_4")
        self.output_dir_label_4 = QLabel(self.widget_4)
        self.output_dir_label_4.setObjectName(u"output_dir_label_4")
        self.output_dir_label_4.setGeometry(QRect(0, 0, 121, 21))
        self.output_dir_label_4.setFont(font2)
        self.output_dir_label_4.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.nr_of_event_logs_input = QSpinBox(self.widget_4)
        self.nr_of_event_logs_input.setObjectName(u"nr_of_event_logs_input")
        self.nr_of_event_logs_input.setGeometry(QRect(130, 0, 81, 25))
        self.nr_of_event_logs_input.setMinimum(1)
        self.nr_of_event_logs_input.setMaximum(1000)
        self.nr_of_event_logs_input.setValue(1)

        self.verticalLayout_2.addWidget(self.widget_4)

        self.trace_estimation_2 = QWidget(self.scrollAreaWidgetContents_4)
        self.trace_estimation_2.setObjectName(u"trace_estimation_2")
        self.include_config_label = QLabel(self.trace_estimation_2)
        self.include_config_label.setObjectName(u"include_config_label")
        self.include_config_label.setGeometry(QRect(0, 0, 311, 21))
        self.include_config_label.setFont(font2)
        self.include_config_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.include_config_input = QCheckBox(self.trace_estimation_2)
        self.include_config_input.setObjectName(u"include_config_input")
        self.include_config_input.setGeometry(QRect(320, 0, 21, 23))
        self.include_config_input.setChecked(True)

        self.verticalLayout_2.addWidget(self.trace_estimation_2)

        self.trace_estimation_3 = QWidget(self.scrollAreaWidgetContents_4)
        self.trace_estimation_3.setObjectName(u"trace_estimation_3")
        self.output_dir_label_38 = QLabel(self.trace_estimation_3)
        self.output_dir_label_38.setObjectName(u"output_dir_label_38")
        self.output_dir_label_38.setGeometry(QRect(0, 0, 141, 21))
        self.output_dir_label_38.setFont(font2)
        self.output_dir_label_38.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.include_metadata_input = QCheckBox(self.trace_estimation_3)
        self.include_metadata_input.setObjectName(u"include_metadata_input")
        self.include_metadata_input.setGeometry(QRect(130, 0, 21, 23))
        self.include_metadata_input.setChecked(True)

        self.verticalLayout_2.addWidget(self.trace_estimation_3)

        self.general_config.setWidget(self.scrollAreaWidgetContents_4)
        self.variable_config = QScrollArea(self.centralwidget)
        self.variable_config.setObjectName(u"variable_config")
        self.variable_config.setGeometry(QRect(410, 174, 451, 561))
        self.variable_config.setFrameShape(QFrame.Box)
        self.variable_config.setFrameShadow(QFrame.Raised)
        self.variable_config.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
        self.variable_config.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOff)
        self.variable_config.setWidgetResizable(True)
        self.scrollAreaWidgetContents_3 = QWidget()
        self.scrollAreaWidgetContents_3.setObjectName(u"scrollAreaWidgetContents_3")
        self.scrollAreaWidgetContents_3.setGeometry(QRect(0, 0, 430, 557))
        self.general_config_3 = QGroupBox(self.scrollAreaWidgetContents_3)
        self.general_config_3.setObjectName(u"general_config_3")
        self.general_config_3.setGeometry(QRect(10, 10, 411, 71))
        self.general_config_3.setFont(font2)
        self.general_config_3.setAutoFillBackground(False)
        self.general_config_3.setFlat(False)
        self.general_config_3.setCheckable(False)
        self.include_variables_in_origin_label = QLabel(self.general_config_3)
        self.include_variables_in_origin_label.setObjectName(u"include_variables_in_origin_label")
        self.include_variables_in_origin_label.setGeometry(QRect(20, 30, 231, 21))
        self.include_variables_in_origin_label.setFont(font2)
        self.include_variables_in_origin_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.inlcude_values_in_origin_event_input = QCheckBox(self.general_config_3)
        self.inlcude_values_in_origin_event_input.setObjectName(u"inlcude_values_in_origin_event_input")
        self.inlcude_values_in_origin_event_input.setGeometry(QRect(260, 30, 141, 23))
        self.inlcude_values_in_origin_event_input.setChecked(True)
        self.inlcude_values_in_origin_event_input.setTristate(False)
        self.variable_config.setWidget(self.scrollAreaWidgetContents_3)
        self.label_var_config = QLabel(self.centralwidget)
        self.label_var_config.setObjectName(u"label_var_config")
        self.label_var_config.setGeometry(QRect(555, 145, 171, 31))
        self.label_var_config.setFont(font1)
        self.sim_status = QScrollArea(self.centralwidget)
        self.sim_status.setObjectName(u"sim_status")
        self.sim_status.setGeometry(QRect(410, 26, 926, 111))
        self.sim_status.setFrameShape(QFrame.Box)
        self.sim_status.setFrameShadow(QFrame.Raised)
        self.sim_status.setWidgetResizable(True)
        self.scrollAreaWidgetContents_5 = QWidget()
        self.scrollAreaWidgetContents_5.setObjectName(u"scrollAreaWidgetContents_5")
        self.scrollAreaWidgetContents_5.setGeometry(QRect(0, 0, 922, 107))
        self.start_simulation_button = QPushButton(self.scrollAreaWidgetContents_5)
        self.start_simulation_button.setObjectName(u"start_simulation_button")
        self.start_simulation_button.setGeometry(QRect(10, 10, 131, 41))
        self.start_simulation_button.setFont(font2)
        self.progressBar = QProgressBar(self.scrollAreaWidgetContents_5)
        self.progressBar.setObjectName(u"progressBar")
        self.progressBar.setGeometry(QRect(150, 70, 771, 31))
        self.progressBar.setValue(0)
        self.label_5 = QLabel(self.scrollAreaWidgetContents_5)
        self.label_5.setObjectName(u"label_5")
        self.label_5.setGeometry(QRect(150, 40, 201, 31))
        self.label_5.setFont(font2)
        self.label_5.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.nr_of_generated_logs_label = QLabel(self.scrollAreaWidgetContents_5)
        self.nr_of_generated_logs_label.setObjectName(u"nr_of_generated_logs_label")
        self.nr_of_generated_logs_label.setGeometry(QRect(360, 40, 71, 31))
        self.nr_of_generated_logs_label.setFont(font2)
        self.nr_of_generated_logs_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.label_7 = QLabel(self.scrollAreaWidgetContents_5)
        self.label_7.setObjectName(u"label_7")
        self.label_7.setGeometry(QRect(450, 40, 261, 31))
        self.label_7.setFont(font2)
        self.label_7.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.nr_of_generated_traces_label = QLabel(self.scrollAreaWidgetContents_5)
        self.nr_of_generated_traces_label.setObjectName(u"nr_of_generated_traces_label")
        self.nr_of_generated_traces_label.setGeometry(QRect(620, 40, 251, 31))
        self.nr_of_generated_traces_label.setFont(font2)
        self.nr_of_generated_traces_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.sim_status_label = QLabel(self.scrollAreaWidgetContents_5)
        self.sim_status_label.setObjectName(u"sim_status_label")
        self.sim_status_label.setGeometry(QRect(260, 10, 191, 31))
        self.sim_status_label.setFont(font2)
        self.sim_status_label.setTextFormat(Qt.RichText)
        self.sim_status_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.label_11 = QLabel(self.scrollAreaWidgetContents_5)
        self.label_11.setObjectName(u"label_11")
        self.label_11.setGeometry(QRect(150, 10, 111, 31))
        self.label_11.setFont(font2)
        self.label_11.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.stop_simulation_button = QToolButton(self.scrollAreaWidgetContents_5)
        self.stop_simulation_button.setObjectName(u"stop_simulation_button")
        self.stop_simulation_button.setGeometry(QRect(10, 60, 131, 41))
        self.nr_of_possible_traces_label = QLabel(self.scrollAreaWidgetContents_5)
        self.nr_of_possible_traces_label.setObjectName(u"nr_of_possible_traces_label")
        self.nr_of_possible_traces_label.setGeometry(QRect(760, 10, 131, 31))
        self.nr_of_possible_traces_label.setFont(font2)
        self.nr_of_possible_traces_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.label_12 = QLabel(self.scrollAreaWidgetContents_5)
        self.label_12.setObjectName(u"label_12")
        self.label_12.setGeometry(QRect(450, 10, 341, 31))
        self.label_12.setFont(font2)
        self.label_12.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.sim_status.setWidget(self.scrollAreaWidgetContents_5)
        self.label_sim_status = QLabel(self.centralwidget)
        self.label_sim_status.setObjectName(u"label_sim_status")
        self.label_sim_status.setGeometry(QRect(810, 2, 135, 21))
        self.label_sim_status.setFont(font1)
        self.model = QScrollArea(self.centralwidget)
        self.model.setObjectName(u"model")
        self.model.setGeometry(QRect(20, 28, 371, 75))
        self.model.setFrameShape(QFrame.Box)
        self.model.setFrameShadow(QFrame.Raised)
        self.model.setWidgetResizable(True)
        self.scrollAreaWidgetContents_6 = QWidget()
        self.scrollAreaWidgetContents_6.setObjectName(u"scrollAreaWidgetContents_6")
        self.scrollAreaWidgetContents_6.setGeometry(QRect(0, 0, 367, 71))
        self.loaded_model_label = QLabel(self.scrollAreaWidgetContents_6)
        self.loaded_model_label.setObjectName(u"loaded_model_label")
        self.loaded_model_label.setGeometry(QRect(10, 0, 261, 71))
        font3 = QFont()
        font3.setPointSize(10)
        self.loaded_model_label.setFont(font3)
        self.loaded_model_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.load_model_button = QToolButton(self.scrollAreaWidgetContents_6)
        self.load_model_button.setObjectName(u"load_model_button")
        self.load_model_button.setGeometry(QRect(285, 5, 71, 61))
        self.line = QFrame(self.scrollAreaWidgetContents_6)
        self.line.setObjectName(u"line")
        self.line.setGeometry(QRect(270, 0, 10, 75))
        self.line.setFrameShadow(QFrame.Plain)
        self.line.setLineWidth(1)
        self.line.setFrameShape(QFrame.VLine)
        self.model.setWidget(self.scrollAreaWidgetContents_6)
        self.label_model = QLabel(self.centralwidget)
        self.label_model.setObjectName(u"label_model")
        self.label_model.setGeometry(QRect(180, 2, 51, 21))
        self.label_model.setFont(font1)
        self.sim_config = QScrollArea(self.centralwidget)
        self.sim_config.setObjectName(u"sim_config")
        self.sim_config.setGeometry(QRect(20, 354, 371, 381))
        self.sim_config.setFrameShape(QFrame.Box)
        self.sim_config.setFrameShadow(QFrame.Raised)
        self.sim_config.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
        self.sim_config.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOff)
        self.sim_config.setWidgetResizable(True)
        self.scrollAreaWidgetContents_7 = QWidget()
        self.scrollAreaWidgetContents_7.setObjectName(u"scrollAreaWidgetContents_7")
        self.scrollAreaWidgetContents_7.setGeometry(QRect(0, 0, 350, 377))
        self.trace_name = QWidget(self.scrollAreaWidgetContents_7)
        self.trace_name.setObjectName(u"trace_name")
        self.trace_name.setGeometry(QRect(10, 40, 324, 20))
        self.nr_of_traces_label_3 = QLabel(self.trace_name)
        self.nr_of_traces_label_3.setObjectName(u"nr_of_traces_label_3")
        self.nr_of_traces_label_3.setGeometry(QRect(0, 0, 121, 21))
        self.nr_of_traces_label_3.setFont(font2)
        self.nr_of_traces_label_3.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.trace_name_input = QLineEdit(self.trace_name)
        self.trace_name_input.setObjectName(u"trace_name_input")
        self.trace_name_input.setGeometry(QRect(140, 0, 191, 25))
        self.trace_name_input.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.only_ending_traces = QWidget(self.scrollAreaWidgetContents_7)
        self.only_ending_traces.setObjectName(u"only_ending_traces")
        self.only_ending_traces.setGeometry(QRect(10, 299, 324, 20))
        self.output_dir_label_12 = QLabel(self.only_ending_traces)
        self.output_dir_label_12.setObjectName(u"output_dir_label_12")
        self.output_dir_label_12.setGeometry(QRect(0, 0, 181, 21))
        self.output_dir_label_12.setFont(font2)
        self.output_dir_label_12.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.only_ending_traces_input = QCheckBox(self.only_ending_traces)
        self.only_ending_traces_input.setObjectName(u"only_ending_traces_input")
        self.only_ending_traces_input.setGeometry(QRect(180, 0, 82, 23))
        self.timestamp_anchor = QWidget(self.scrollAreaWidgetContents_7)
        self.timestamp_anchor.setObjectName(u"timestamp_anchor")
        self.timestamp_anchor.setGeometry(QRect(10, 351, 324, 20))
        self.output_dir_label_13 = QLabel(self.timestamp_anchor)
        self.output_dir_label_13.setObjectName(u"output_dir_label_13")
        self.output_dir_label_13.setGeometry(QRect(0, 0, 151, 21))
        self.output_dir_label_13.setFont(font2)
        self.output_dir_label_13.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.timestamp_anchor_input = QDateTimeEdit(self.timestamp_anchor)
        self.timestamp_anchor_input.setObjectName(u"timestamp_anchor_input")
        self.timestamp_anchor_input.setGeometry(QRect(160, 0, 171, 25))
        self.timestamp_anchor_input.setMinimumDateTime(QDateTime(QDate(1900, 1, 1), QTime(0, 0, 0)))
        self.fixed_timestamp_anchor = QWidget(self.scrollAreaWidgetContents_7)
        self.fixed_timestamp_anchor.setObjectName(u"fixed_timestamp_anchor")
        self.fixed_timestamp_anchor.setGeometry(QRect(10, 403, 324, 20))
        self.output_dir_label_14 = QLabel(self.fixed_timestamp_anchor)
        self.output_dir_label_14.setObjectName(u"output_dir_label_14")
        self.output_dir_label_14.setGeometry(QRect(0, 0, 181, 21))
        self.output_dir_label_14.setFont(font2)
        self.output_dir_label_14.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.fixed_timestamp_anchor_input = QCheckBox(self.fixed_timestamp_anchor)
        self.fixed_timestamp_anchor_input.setObjectName(u"fixed_timestamp_anchor_input")
        self.fixed_timestamp_anchor_input.setGeometry(QRect(190, 0, 82, 23))
        self.include_partial_traces = QWidget(self.scrollAreaWidgetContents_7)
        self.include_partial_traces.setObjectName(u"include_partial_traces")
        self.include_partial_traces.setGeometry(QRect(10, 325, 324, 20))
        self.output_dir_label_21 = QLabel(self.include_partial_traces)
        self.output_dir_label_21.setObjectName(u"output_dir_label_21")
        self.output_dir_label_21.setGeometry(QRect(0, 0, 171, 21))
        self.output_dir_label_21.setFont(font2)
        self.output_dir_label_21.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.partial_traces_input = QCheckBox(self.include_partial_traces)
        self.partial_traces_input.setObjectName(u"partial_traces_input")
        self.partial_traces_input.setGeometry(QRect(180, 0, 82, 23))
        self.seed = QWidget(self.scrollAreaWidgetContents_7)
        self.seed.setObjectName(u"seed")
        self.seed.setGeometry(QRect(10, 429, 324, 20))
        self.seed_input = QLineEdit(self.seed)
        self.seed_input.setObjectName(u"seed_input")
        self.seed_input.setGeometry(QRect(160, 0, 161, 25))
        self.seed_input.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.seed_label = QLabel(self.seed)
        self.seed_label.setObjectName(u"seed_label")
        self.seed_label.setGeometry(QRect(0, 0, 121, 21))
        self.seed_label.setFont(font2)
        self.seed_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.max_trace_duplicates = QWidget(self.scrollAreaWidgetContents_7)
        self.max_trace_duplicates.setObjectName(u"max_trace_duplicates")
        self.max_trace_duplicates.setGeometry(QRect(10, 222, 324, 20))
        self.output_dir_label_10 = QLabel(self.max_trace_duplicates)
        self.output_dir_label_10.setObjectName(u"output_dir_label_10")
        self.output_dir_label_10.setGeometry(QRect(0, 0, 151, 21))
        self.output_dir_label_10.setFont(font2)
        self.output_dir_label_10.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.max_trace_duplicates_input = QSpinBox(self.max_trace_duplicates)
        self.max_trace_duplicates_input.setObjectName(u"max_trace_duplicates_input")
        self.max_trace_duplicates_input.setGeometry(QRect(160, 0, 81, 25))
        self.max_trace_duplicates_input.setMinimum(0)
        self.max_trace_duplicates_input.setMaximum(10000)
        self.max_trace_duplicates_input.setValue(0)
        self.sim_strategy = QWidget(self.scrollAreaWidgetContents_7)
        self.sim_strategy.setObjectName(u"sim_strategy")
        self.sim_strategy.setGeometry(QRect(10, 14, 324, 20))
        self.output_dir_label_7 = QLabel(self.sim_strategy)
        self.output_dir_label_7.setObjectName(u"output_dir_label_7")
        self.output_dir_label_7.setGeometry(QRect(0, 0, 131, 21))
        self.output_dir_label_7.setFont(font2)
        self.output_dir_label_7.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.sim_strategy_input = QComboBox(self.sim_strategy)
        self.sim_strategy_input.setObjectName(u"sim_strategy_input")
        self.sim_strategy_input.setGeometry(QRect(140, 0, 191, 25))
        self.duplicates_with_data = QWidget(self.scrollAreaWidgetContents_7)
        self.duplicates_with_data.setObjectName(u"duplicates_with_data")
        self.duplicates_with_data.setGeometry(QRect(10, 247, 324, 20))
        self.output_dir_label_11 = QLabel(self.duplicates_with_data)
        self.output_dir_label_11.setObjectName(u"output_dir_label_11")
        self.output_dir_label_11.setGeometry(QRect(0, 0, 191, 21))
        self.output_dir_label_11.setFont(font2)
        self.output_dir_label_11.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.duplicates_with_data_input = QCheckBox(self.duplicates_with_data)
        self.duplicates_with_data_input.setObjectName(u"duplicates_with_data_input")
        self.duplicates_with_data_input.setGeometry(QRect(270, 0, 31, 23))
        self.nr_of_traces = QWidget(self.scrollAreaWidgetContents_7)
        self.nr_of_traces.setObjectName(u"nr_of_traces")
        self.nr_of_traces.setGeometry(QRect(10, 66, 324, 20))
        self.nr_of_traces_label = QLabel(self.nr_of_traces)
        self.nr_of_traces_label.setObjectName(u"nr_of_traces_label")
        self.nr_of_traces_label.setGeometry(QRect(0, 0, 151, 21))
        self.nr_of_traces_label.setFont(font2)
        self.nr_of_traces_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.nr_of_traces_input = QSpinBox(self.nr_of_traces)
        self.nr_of_traces_input.setObjectName(u"nr_of_traces_input")
        self.nr_of_traces_input.setGeometry(QRect(160, 0, 91, 25))
        self.nr_of_traces_input.setMinimum(1)
        self.nr_of_traces_input.setMaximum(100000)
        self.nr_of_traces_input.setValue(1)
        self.utc_offset = QWidget(self.scrollAreaWidgetContents_7)
        self.utc_offset.setObjectName(u"utc_offset")
        self.utc_offset.setGeometry(QRect(10, 377, 324, 20))
        self.output_dir_label_23 = QLabel(self.utc_offset)
        self.output_dir_label_23.setObjectName(u"output_dir_label_23")
        self.output_dir_label_23.setGeometry(QRect(0, 0, 151, 21))
        self.output_dir_label_23.setFont(font2)
        self.output_dir_label_23.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.utc_offset_input = QSpinBox(self.utc_offset)
        self.utc_offset_input.setObjectName(u"utc_offset_input")
        self.utc_offset_input.setGeometry(QRect(160, 0, 61, 25))
        self.utc_offset_input.setMinimum(-23)
        self.utc_offset_input.setMaximum(23)
        self.max_trace_length = QWidget(self.scrollAreaWidgetContents_7)
        self.max_trace_length.setObjectName(u"max_trace_length")
        self.max_trace_length.setGeometry(QRect(10, 92, 324, 20))
        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.max_trace_length.sizePolicy().hasHeightForWidth())
        self.max_trace_length.setSizePolicy(sizePolicy)
        self.output_dir_label_8 = QLabel(self.max_trace_length)
        self.output_dir_label_8.setObjectName(u"output_dir_label_8")
        self.output_dir_label_8.setGeometry(QRect(0, 0, 141, 21))
        self.output_dir_label_8.setFont(font2)
        self.output_dir_label_8.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.max_trace_length_input = QSpinBox(self.max_trace_length)
        self.max_trace_length_input.setObjectName(u"max_trace_length_input")
        self.max_trace_length_input.setGeometry(QRect(160, 0, 91, 25))
        self.max_trace_length_input.setMinimum(1)
        self.max_trace_length_input.setMaximum(100000)
        self.max_trace_length_input.setValue(2)
        self.max_loop_iterations = QWidget(self.scrollAreaWidgetContents_7)
        self.max_loop_iterations.setObjectName(u"max_loop_iterations")
        self.max_loop_iterations.setGeometry(QRect(10, 144, 324, 20))
        self.output_dir_label_9 = QLabel(self.max_loop_iterations)
        self.output_dir_label_9.setObjectName(u"output_dir_label_9")
        self.output_dir_label_9.setGeometry(QRect(0, 0, 221, 21))
        self.output_dir_label_9.setFont(font2)
        self.output_dir_label_9.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.max_loop_iterations_input = QSpinBox(self.max_loop_iterations)
        self.max_loop_iterations_input.setObjectName(u"max_loop_iterations_input")
        self.max_loop_iterations_input.setGeometry(QRect(240, 0, 91, 25))
        self.max_loop_iterations_input.setMinimum(1)
        self.max_loop_iterations_input.setMaximum(10000)
        self.max_loop_iterations_input.setValue(1)
        self.min_trace_length = QWidget(self.scrollAreaWidgetContents_7)
        self.min_trace_length.setObjectName(u"min_trace_length")
        self.min_trace_length.setGeometry(QRect(10, 118, 324, 20))
        self.output_dir_label_24 = QLabel(self.min_trace_length)
        self.output_dir_label_24.setObjectName(u"output_dir_label_24")
        self.output_dir_label_24.setGeometry(QRect(0, 0, 141, 21))
        self.output_dir_label_24.setFont(font2)
        self.output_dir_label_24.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.min_trace_length_input = QSpinBox(self.min_trace_length)
        self.min_trace_length_input.setObjectName(u"min_trace_length_input")
        self.min_trace_length_input.setGeometry(QRect(160, 0, 91, 25))
        self.min_trace_length_input.setMinimum(1)
        self.min_trace_length_input.setMaximum(100000)
        self.min_trace_length_input.setValue(1)
        self.duplicates_with_invisible_trans = QWidget(self.scrollAreaWidgetContents_7)
        self.duplicates_with_invisible_trans.setObjectName(u"duplicates_with_invisible_trans")
        self.duplicates_with_invisible_trans.setGeometry(QRect(10, 273, 324, 20))
        self.output_dir_label_32 = QLabel(self.duplicates_with_invisible_trans)
        self.output_dir_label_32.setObjectName(u"output_dir_label_32")
        self.output_dir_label_32.setGeometry(QRect(0, 0, 251, 21))
        self.output_dir_label_32.setFont(font2)
        self.output_dir_label_32.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.duplicates_with_invisible_trans_input = QCheckBox(self.duplicates_with_invisible_trans)
        self.duplicates_with_invisible_trans_input.setObjectName(u"duplicates_with_invisible_trans_input")
        self.duplicates_with_invisible_trans_input.setGeometry(QRect(270, 0, 51, 23))
        self.changing_loop = QWidget(self.scrollAreaWidgetContents_7)
        self.changing_loop.setObjectName(u"changing_loop")
        self.changing_loop.setGeometry(QRect(10, 196, 324, 20))
        self.output_dir_label_15 = QLabel(self.changing_loop)
        self.output_dir_label_15.setObjectName(u"output_dir_label_15")
        self.output_dir_label_15.setGeometry(QRect(0, 0, 301, 21))
        self.output_dir_label_15.setFont(font2)
        self.output_dir_label_15.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.changing_loop_input = QCheckBox(self.changing_loop)
        self.changing_loop_input.setObjectName(u"changing_loop_input")
        self.changing_loop_input.setGeometry(QRect(310, 0, 21, 23))
        self.changing_loop_input.setChecked(True)
        self.max_loop_iterations_transition = QWidget(self.scrollAreaWidgetContents_7)
        self.max_loop_iterations_transition.setObjectName(u"max_loop_iterations_transition")
        self.max_loop_iterations_transition.setGeometry(QRect(10, 170, 324, 20))
        self.output_dir_label_25 = QLabel(self.max_loop_iterations_transition)
        self.output_dir_label_25.setObjectName(u"output_dir_label_25")
        self.output_dir_label_25.setGeometry(QRect(0, 0, 241, 21))
        self.output_dir_label_25.setFont(font2)
        self.output_dir_label_25.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.max_loop_iterations_transitions_input = QSpinBox(self.max_loop_iterations_transition)
        self.max_loop_iterations_transitions_input.setObjectName(u"max_loop_iterations_transitions_input")
        self.max_loop_iterations_transitions_input.setGeometry(QRect(240, 0, 91, 25))
        self.max_loop_iterations_transitions_input.setMinimum(1)
        self.max_loop_iterations_transitions_input.setMaximum(10000)
        self.max_loop_iterations_transitions_input.setValue(1)
        self.trace_estimation = QWidget(self.scrollAreaWidgetContents_7)
        self.trace_estimation.setObjectName(u"trace_estimation")
        self.trace_estimation.setGeometry(QRect(0, 30, 324, 20))
        self.output_dir_label_34 = QLabel(self.trace_estimation)
        self.output_dir_label_34.setObjectName(u"output_dir_label_34")
        self.output_dir_label_34.setGeometry(QRect(0, 0, 191, 21))
        self.output_dir_label_34.setFont(font2)
        self.output_dir_label_34.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.trace_estimation_input = QCheckBox(self.trace_estimation)
        self.trace_estimation_input.setObjectName(u"trace_estimation_input")
        self.trace_estimation_input.setGeometry(QRect(220, 0, 31, 23))
        self.trace_estimation_input.setChecked(True)
        self.limit_variable_values = QWidget(self.scrollAreaWidgetContents_7)
        self.limit_variable_values.setObjectName(u"limit_variable_values")
        self.limit_variable_values.setGeometry(QRect(0, 370, 331, 20))
        self.output_dir_label_36 = QLabel(self.limit_variable_values)
        self.output_dir_label_36.setObjectName(u"output_dir_label_36")
        self.output_dir_label_36.setGeometry(QRect(0, 0, 201, 21))
        self.output_dir_label_36.setFont(font2)
        self.output_dir_label_36.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.limit_variable_values_input = QCheckBox(self.limit_variable_values)
        self.limit_variable_values_input.setObjectName(u"limit_variable_values_input")
        self.limit_variable_values_input.setGeometry(QRect(220, 0, 31, 23))
        self.limit_variable_values_input.setChecked(True)
        self.merge_intervals = QWidget(self.scrollAreaWidgetContents_7)
        self.merge_intervals.setObjectName(u"merge_intervals")
        self.merge_intervals.setGeometry(QRect(0, 340, 324, 20))
        self.output_dir_label_35 = QLabel(self.merge_intervals)
        self.output_dir_label_35.setObjectName(u"output_dir_label_35")
        self.output_dir_label_35.setGeometry(QRect(0, 0, 211, 21))
        self.output_dir_label_35.setFont(font2)
        self.output_dir_label_35.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.merge_intervals_input = QCheckBox(self.merge_intervals)
        self.merge_intervals_input.setObjectName(u"merge_intervals_input")
        self.merge_intervals_input.setGeometry(QRect(220, 0, 31, 23))
        self.merge_intervals_input.setChecked(True)
        self.sim_config.setWidget(self.scrollAreaWidgetContents_7)
        self.DALG_VERSION = QLabel(self.centralwidget)
        self.DALG_VERSION.setObjectName(u"DALG_VERSION")
        self.DALG_VERSION.setGeometry(QRect(1290, 0, 51, 21))
        font4 = QFont()
        font4.setPointSize(9)
        self.DALG_VERSION.setFont(font4)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 1360, 25))
        self.menuFile = QMenu(self.menubar)
        self.menuFile.setObjectName(u"menuFile")
        font5 = QFont()
        font5.setPointSize(11)
        font5.setBold(False)
        font5.setUnderline(False)
        font5.setStrikeOut(False)
        self.menuFile.setFont(font5)
        self.menuHelp = QMenu(self.menubar)
        self.menuHelp.setObjectName(u"menuHelp")
        MainWindow.setMenuBar(self.menubar)

        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.menuFile.addAction(self.actionLoad_PnmlFile)
        self.menuFile.addAction(self.actionSafe_Configuration)
        self.menuFile.addAction(self.actionLoad_Configuration)
        self.menuFile.addAction(self.actionExit)
        self.menuHelp.addAction(self.actionOpen_User_Manual)
        self.menuHelp.addAction(self.actionShow_Welcome_Screen_Again)

        self.retranslateUi(MainWindow)

        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"MainWindow", None))
        self.actionLoad_PnmlFile.setText(QCoreApplication.translate("MainWindow", u"Open Model File", None))
        self.actionExit.setText(QCoreApplication.translate("MainWindow", u"Exit", None))
        self.actionAbout.setText(QCoreApplication.translate("MainWindow", u"About", None))
        self.actionRun_Simulation.setText(QCoreApplication.translate("MainWindow", u"Run Simulation", None))
        self.actionSafe_Configuration.setText(QCoreApplication.translate("MainWindow", u"Safe Configuration", None))
        self.actionLoad_Configuration.setText(QCoreApplication.translate("MainWindow", u"Load Configuration", None))
        self.actionOpen_User_Manual.setText(QCoreApplication.translate("MainWindow", u"Open User Manual", None))
        self.actionShow_Welcome_Screen_Again.setText(QCoreApplication.translate("MainWindow", u"Show Welcome Screen Again", None))
#if QT_CONFIG(tooltip)
        self.label_trans_config.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>This area houses all the settings options which influence the timing of transition firings and how the transition firings are represented in the event log.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.label_trans_config.setText(QCoreApplication.translate("MainWindow", u"Transition Configuration", None))
        self.general_config_2.setTitle(QCoreApplication.translate("MainWindow", u"General Configuration", None))
#if QT_CONFIG(tooltip)
        self.avg_trans_delay.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>These settings influence the amount of time that passes before a transition is fired after the previous transition finished. These general settings are used for all transitions for which no individual settings are provided.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_16.setText(QCoreApplication.translate("MainWindow", u"Avg. Transition Time Delay:", None))
        self.avg_trans_delay_time_input.setDisplayFormat(QCoreApplication.translate("MainWindow", u"HH:mm:ss", None))
#if QT_CONFIG(tooltip)
        self.time_delay_sd.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>These settings influence the amount of time that passes before a transition is fired after the previous transition finished. These general settings are used for all transitions for which no individual settings are provided.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_18.setText(QCoreApplication.translate("MainWindow", u"Standard Deviation:", None))
        self.time_delay_sd_time_input.setDisplayFormat(QCoreApplication.translate("MainWindow", u"HH:mm:ss", None))
#if QT_CONFIG(tooltip)
        self.delay_time_delay_minimum.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>These settings influence the amount of time that passes before a transition is fired after the previous transition finished. These general settings are used for all transitions for which no individual settings are provided.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_20.setText(QCoreApplication.translate("MainWindow", u"Minimum:", None))
        self.time_delay_minimum_time_input.setDisplayFormat(QCoreApplication.translate("MainWindow", u"HH:mm:ss", None))
#if QT_CONFIG(tooltip)
        self.delay_time_delay_maximum.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>These settings influence the amount of time that passes before a transition is fired after the previous transition finished. These general settings are used for all transitions for which no individual settings are provided.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_19.setText(QCoreApplication.translate("MainWindow", u"Maximum:", None))
        self.time_delay_maximum_time_input.setDisplayFormat(QCoreApplication.translate("MainWindow", u"HH:mm:ss", None))
        self.hours_min_sec.setText(QCoreApplication.translate("MainWindow", u"Hours:Min:Sec", None))
        self.days.setText(QCoreApplication.translate("MainWindow", u"Days", None))
#if QT_CONFIG(tooltip)
        self.lead_time_delay_maximum.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>These settings influence the amount of time that is needed for the completion of a transition. These general settings are used for all transitions for which no individual settings are provided.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_28.setText(QCoreApplication.translate("MainWindow", u"Maximum:", None))
        self.time_lead_maximum_time_input.setDisplayFormat(QCoreApplication.translate("MainWindow", u"HH:mm:ss", None))
#if QT_CONFIG(tooltip)
        self.lead_time_delay_minimum.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>These settings influence the amount of time that is needed for the completion of a transition. These general settings are used for all transitions for which no individual settings are provided.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_29.setText(QCoreApplication.translate("MainWindow", u"Minimum:", None))
        self.time_lead_minimum_time_input.setDisplayFormat(QCoreApplication.translate("MainWindow", u"HH:mm:ss", None))
#if QT_CONFIG(tooltip)
        self.avg_trans_delay_3.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>These settings influence the amount of time that is needed for the completion of a transition. These general settings are used for all transitions for which no individual settings are provided.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_30.setText(QCoreApplication.translate("MainWindow", u"Avg. Lead Time:", None))
        self.avg_trans_lead_time_input.setDisplayFormat(QCoreApplication.translate("MainWindow", u"HH:mm:ss", None))
#if QT_CONFIG(tooltip)
        self.lead_time_sd.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>These settings influence the amount of time that is needed for the completion of a transition. These general settings are used for all transitions for which no individual settings are provided.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_27.setText(QCoreApplication.translate("MainWindow", u"Standard Deviation:", None))
        self.time_lead_sd_time_input.setDisplayFormat(QCoreApplication.translate("MainWindow", u"HH:mm:ss", None))
#if QT_CONFIG(tooltip)
        self.include_invisible_transitions.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>If this setting is checked the event logs will contain events corresponding to the firing of invisible transitions.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_26.setText(QCoreApplication.translate("MainWindow", u"Include Invisible Transitions in Event Log:", None))
        self.include_invisible_transitions_input.setText("")
#if QT_CONFIG(tooltip)
        self.include_microseconds.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>If this setting is checked the timestamp of events will include microsecond precision.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_33.setText(QCoreApplication.translate("MainWindow", u"Include Microseconds in Timestamps:", None))
        self.timestamp_millieseconds_input.setText("")
#if QT_CONFIG(tooltip)
        self.variance_input.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>This input allows you to add variance to the timestamp of an activity if the activity is at the beginning of a time interval. If this setting is not usesd all timestamps that are originally outside of the time intervals will be at the beginning of the next valid interval. </p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.variance_input.setText("")
#if QT_CONFIG(tooltip)
        self.time_intervals_input.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>This input allows you to restrict when the activity can be performed. Therefore, a list of time intervals can be provided. If not Intervals are provided, no restrictions aply. The following syntax has to be used:</p><p align=\"center\">Mon,Tue,Wed,Thu,Fri,Sat,Sun | 07:00:00-12:00:00;</p><p align=\"center\">Mon,Tue,Wed,Thu,Fri | 14:00:00-18:00:00;</p><p align=\"center\">.....</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.initial_value_label_7.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>This input allows you to add variance to the timestamp of an activity if the activity is at the beginning of a time interval. If this setting is not usesd all timestamps that are originally outside of the time intervals will be at the beginning of the next valid interval. </p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.initial_value_label_7.setText(QCoreApplication.translate("MainWindow", u"Add Time Interval Variance:", None))
#if QT_CONFIG(tooltip)
        self.initial_value_label_8.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>This input allows you set the maximum variance.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.initial_value_label_8.setText(QCoreApplication.translate("MainWindow", u"Maximum Variance (Minutes):", None))
#if QT_CONFIG(tooltip)
        self.max_variance_input.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>This input allows you set the maximum variance.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.output_dir_label_39.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>This input allows you to restrict when the activity can be performed. Therefore, a list of time intervals can be provided. If not Intervals are provided, no restrictions aply. The following syntax has to be used:</p><p align=\"center\">Mon,Tue,Wed,Thu,Fri,Sat,Sun | 07:00:00-12:00:00;</p><p align=\"center\">Mon,Tue,Wed,Thu,Fri | 14:00:00-18:00:00;</p><p align=\"center\">.....</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_39.setText(QCoreApplication.translate("MainWindow", u"Time Intervals:", None))
#if QT_CONFIG(tooltip)
        self.label_general_config.setToolTip("")
#endif // QT_CONFIG(tooltip)
        self.label_general_config.setText(QCoreApplication.translate("MainWindow", u"General Configuration", None))
        self.label_sim_config.setText(QCoreApplication.translate("MainWindow", u"Simulation Configuration", None))
#if QT_CONFIG(tooltip)
        self.widget_2.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Directory to which the generated event logs are exported.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.output_path_input.setToolTip("")
#endif // QT_CONFIG(tooltip)
        self.output_dir_label.setText(QCoreApplication.translate("MainWindow", u"Output Directory: ", None))
        self.set_output_dir_button.setText(QCoreApplication.translate("MainWindow", u"Set", None))
#if QT_CONFIG(tooltip)
        self.widget_3.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Filename that is used for the generated event log. If multiple event logs are created the name will be expanded with a number.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.widget_3.setWhatsThis(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Dies ist ein Test</p><p><br/></p></body></html>", None))
#endif // QT_CONFIG(whatsthis)
        self.output_dir_label_3.setText(QCoreApplication.translate("MainWindow", u"File Name:", None))
#if QT_CONFIG(tooltip)
        self.widget_4.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>The number of event logs that are generated using the specified configuration.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_4.setText(QCoreApplication.translate("MainWindow", u"Nr. of Event Logs:", None))
#if QT_CONFIG(tooltip)
        self.trace_estimation_2.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>If this option is checked the configuration that the simulation is started with will be saved in the output dirctory. Warning: The configuration will be saved as &quot;{file name}_config.json&quot;. The file will be replaced if it already exists.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.include_config_label.setText(QCoreApplication.translate("MainWindow", u"Include Configuration in Output Directory:", None))
        self.include_config_input.setText("")
#if QT_CONFIG(tooltip)
        self.trace_estimation_3.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>If this option is checked some basic metadata will be included in the event log by using the &quot;meta_general&quot; and &quot;meta_concept&quot; XES extensions.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_38.setText(QCoreApplication.translate("MainWindow", u"Include Metadata:", None))
        self.include_metadata_input.setText("")
        self.general_config_3.setTitle(QCoreApplication.translate("MainWindow", u"General Configuration", None))
#if QT_CONFIG(tooltip)
        self.include_variables_in_origin_label.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>If this setting is checked the values that are generated during an transition are already included in the corresponding event. If this setting is not checked the values first appear in the following event.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.include_variables_in_origin_label.setText(QCoreApplication.translate("MainWindow", u"Include Values in Origin Event:", None))
#if QT_CONFIG(tooltip)
        self.inlcude_values_in_origin_event_input.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>If this setting is checked the values that are generated during an transition are already included in the corresponding event. If this setting is not checked the values first appear in the following event.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.inlcude_values_in_origin_event_input.setText("")
#if QT_CONFIG(tooltip)
        self.label_var_config.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>This area houses all the settings options which influence the generation of values for the variables of the model.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.label_var_config.setText(QCoreApplication.translate("MainWindow", u"Variable Configuration", None))
        self.start_simulation_button.setText(QCoreApplication.translate("MainWindow", u"Start Simulation", None))
#if QT_CONFIG(tooltip)
        self.progressBar.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>This progress bar will show the progress of the simulation if the number of event logs/traces that are generated is fixed. If the &quot;Random Exploration&quot; or &quot;All Traces&quot; strategy is chosen the progress bar will use the specified maximum number of traces or the trace estimation to show the percentage of traces generated so far.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.label_5.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>The number of complete event logs that have been generated so far.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.label_5.setText(QCoreApplication.translate("MainWindow", u"Nr. of Generated Event Logs:", None))
#if QT_CONFIG(tooltip)
        self.nr_of_generated_logs_label.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>The number of complete event logs that have been generated so far.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.nr_of_generated_logs_label.setText(QCoreApplication.translate("MainWindow", u"0", None))
#if QT_CONFIG(tooltip)
        self.label_7.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>The total number of traces that have been generated so far.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.label_7.setText(QCoreApplication.translate("MainWindow", u"Nr. of Generated Traces:", None))
        self.nr_of_generated_traces_label.setText(QCoreApplication.translate("MainWindow", u"0", None))
#if QT_CONFIG(tooltip)
        self.sim_status_label.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Current Status of the simulation.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.sim_status_label.setText(QCoreApplication.translate("MainWindow", u"Not Running", None))
#if QT_CONFIG(tooltip)
        self.label_11.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Current Status of the simulation.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.label_11.setText(QCoreApplication.translate("MainWindow", u"Current Status:", None))
#if QT_CONFIG(tooltip)
        self.stop_simulation_button.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>This button will end the simulation. If the simulation is ended while generating event logs the option will be given to save the event logs generated so far. </p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.stop_simulation_button.setText(QCoreApplication.translate("MainWindow", u"End/Abort\n"
"Simulation", None))
#if QT_CONFIG(tooltip)
        self.nr_of_possible_traces_label.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>If the model has no loop with a changing marking and the &quot;random exploration&quot; or &quot;full exploration&quot; strategy is chosen an estimation of the number of possible traces will be shown here.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.nr_of_possible_traces_label.setText(QCoreApplication.translate("MainWindow", u"0", None))
#if QT_CONFIG(tooltip)
        self.label_12.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>If the model has no loop with a changing marking and the &quot;random exploration&quot; or &quot;full exploration&quot; strategy is chosen an estimation of the number of possible traces will be shown here.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.label_12.setText(QCoreApplication.translate("MainWindow", u"Nr. of max. possible traces (trace estimation):", None))
        self.label_sim_status.setText(QCoreApplication.translate("MainWindow", u"Simulation Status", None))
#if QT_CONFIG(tooltip)
        self.loaded_model_label.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Path of the model that is currently loaded.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.loaded_model_label.setText(QCoreApplication.translate("MainWindow", u"No Model Loaded!", None))
        self.load_model_button.setText(QCoreApplication.translate("MainWindow", u"Open\n"
"Model", None))
        self.label_model.setText(QCoreApplication.translate("MainWindow", u"Model", None))
#if QT_CONFIG(tooltip)
        self.trace_name.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>The name each trace in the event log has. If multiple traces are generated the name will be expanded with a number. If the field is left empty the trace names will just be numbers.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.nr_of_traces_label_3.setText(QCoreApplication.translate("MainWindow", u"Trace Name:", None))
        self.trace_name_input.setText(QCoreApplication.translate("MainWindow", u"trace", None))
#if QT_CONFIG(tooltip)
        self.only_ending_traces.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>If this option is checked only traces that reach a valid final marking are included in the event log.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_12.setText(QCoreApplication.translate("MainWindow", u"Only Valid Ending Traces:", None))
        self.only_ending_traces_input.setText("")
#if QT_CONFIG(tooltip)
        self.timestamp_anchor.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>This utc timestamp will be used as the starting time for the traces. The input format is &quot;dd.MM.yyyy hh:mm:ss&quot;.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_13.setText(QCoreApplication.translate("MainWindow", u"Timestamp Anchor:", None))
        self.timestamp_anchor_input.setDisplayFormat(QCoreApplication.translate("MainWindow", u"dd.MM.yyyy HH:mm:ss", None))
#if QT_CONFIG(tooltip)
        self.fixed_timestamp_anchor.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>If this option is checked all traces will use the timestamp anchor as a starting time and therefore run in parralel. If this option is not checked each trace start with the ending timestamp of the previous trace.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_14.setText(QCoreApplication.translate("MainWindow", u"Fixed Timestamp Anchor:", None))
        self.fixed_timestamp_anchor_input.setText("")
#if QT_CONFIG(tooltip)
        self.include_partial_traces.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>If this option is not checked only traces are included that reach a final marking or a marking in which no transition is enabled. If this option is checked all partial traces found during the simulation will also be included.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_21.setText(QCoreApplication.translate("MainWindow", u"Include Partial Traces:", None))
        self.partial_traces_input.setText("")
#if QT_CONFIG(tooltip)
        self.seed.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>The seed that is used for all pseudo random number generators used in the simulation. If the simulation is started with the same seed and settings the resulting event log will be identical every time. The seed must be a positive integer.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.seed.setWhatsThis(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Dies ist ein Test</p><p><br/></p></body></html>", None))
#endif // QT_CONFIG(whatsthis)
        self.seed_input.setText(QCoreApplication.translate("MainWindow", u"1701", None))
        self.seed_label.setText(QCoreApplication.translate("MainWindow", u"Seed:", None))
#if QT_CONFIG(tooltip)
        self.max_trace_duplicates.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>The maximum number of duplicates traces that are allowed in each event log.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_10.setText(QCoreApplication.translate("MainWindow", u"Max. Trace Duplicates:", None))
#if QT_CONFIG(tooltip)
        self.sim_strategy.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Simulation mode that is used for the generation of traces.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_7.setText(QCoreApplication.translate("MainWindow", u"Simulation Mode:", None))
        self.sim_strategy_input.setCurrentText("")
#if QT_CONFIG(tooltip)
        self.duplicates_with_data.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>This option controls whether the variables of events are considered when determining if two traces are equal. If this option is unchecked only the sequence of events is considered. If this option is checked the variable values of each event are also considered.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_11.setText(QCoreApplication.translate("MainWindow", u"Duplicates with Variables:", None))
        self.duplicates_with_data_input.setText("")
#if QT_CONFIG(tooltip)
        self.nr_of_traces.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>The number of traces that will be generated for each event log.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.nr_of_traces_label.setText(QCoreApplication.translate("MainWindow", u"Nr. of Traces:", None))
#if QT_CONFIG(tooltip)
        self.utc_offset.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>The utc offset for the timestamp anchor. </p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_23.setText(QCoreApplication.translate("MainWindow", u"Utc Offset:", None))
#if QT_CONFIG(tooltip)
        self.max_trace_length.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>The maximum number of fired transitions that are allowed in a each trace. If the &quot;Include Invisible Transitions in Event Log&quot; setting is activated the invisible transitions will also be considered.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_8.setText(QCoreApplication.translate("MainWindow", u"Max. Trace Length:", None))
#if QT_CONFIG(tooltip)
        self.max_loop_iterations.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Maximum number of times a marking is allowed to appear in a trace. This setting therefore controls the number of loop iterations for loops without changing markings.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_9.setText(QCoreApplication.translate("MainWindow", u"Max. Loop Iterations (Marking):", None))
#if QT_CONFIG(tooltip)
        self.min_trace_length.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>The minimum number of events (e.g., nr. of fired transitions) that are allowed in a each trace.  If the &quot;Include Invisible Transitions in Event Log&quot; setting is activated the invisible transitions will also be considered.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_24.setText(QCoreApplication.translate("MainWindow", u"Min. Trace Length:", None))
#if QT_CONFIG(tooltip)
        self.duplicates_with_invisible_trans.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>This option controls whether invisible transitions are considered when determining if two traces are equal. If this option is unchecked only the sequence of transitions that are not invisible is considered. If this option is checked the sequence of all transitions is considered.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_32.setText(QCoreApplication.translate("MainWindow", u"Duplicates with Invisible Transitions:", None))
#if QT_CONFIG(tooltip)
        self.duplicates_with_invisible_trans_input.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>This option controls whether the invisible transitions are considered when determining if two traces are equal. If this option is checked the sequence of transitions that is compared between the traces will include the invisible transitions.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.duplicates_with_invisible_trans_input.setText("")
#if QT_CONFIG(tooltip)
        self.changing_loop.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Information about whether the model has a loop that does not return to a common marking. If you are unsure if your model contains a such a loop, it is better to leave this option unchecked. If the model has no such loop the number of possible traces can be estimated and displayed. However this estimation will result in an infinite loop if a loop with a changing marking is present.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_15.setText(QCoreApplication.translate("MainWindow", u"Model has no Loop with Changing Marking:", None))
        self.changing_loop_input.setText("")
#if QT_CONFIG(tooltip)
        self.max_loop_iterations_transition.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Maximum number of times a transition is allowed to appear in a trace. This setting therefore can controls the number of loop iterations for loops with changing markings. However models can exists where a transition can be fired multiple times without a loop being present. Therefore this setting should be used with caution since it can also restraints transition firings that are not part of a loop.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_25.setText(QCoreApplication.translate("MainWindow", u"Max. Loop Iterations (Transitions):", None))
#if QT_CONFIG(tooltip)
        self.trace_estimation.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>This options controls whether a estimation of the maximum number of possible traces is performed before the simulation. </p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_34.setText(QCoreApplication.translate("MainWindow", u"Perform Trace Estimation", None))
        self.trace_estimation_input.setText("")
#if QT_CONFIG(tooltip)
        self.limit_variable_values.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>This option helps to reduce the number of possible variable value combinations by limiting the values for variables to values that are needed to satisfy guard conditions in the model. </p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_36.setText(QCoreApplication.translate("MainWindow", u"Limit Variable Values:", None))
        self.limit_variable_values_input.setText("")
#if QT_CONFIG(tooltip)
        self.merge_intervals.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>This option helps to reduce the number of possible variable value combinations by merging intervals that can be merged. For example the interval &quot;&gt; 1&quot; and &quot;&gt; 2&quot; can be represented by the single intervall &quot;&gt; 2&quot;. The less intervals that are present the less combinations of variable values have to be tried in order to find a combination that works for a given trace. </p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.output_dir_label_35.setText(QCoreApplication.translate("MainWindow", u"Merge Intervals if Possible:", None))
        self.merge_intervals_input.setText("")
        self.DALG_VERSION.setText("")
        self.menuFile.setTitle(QCoreApplication.translate("MainWindow", u"File", None))
        self.menuHelp.setTitle(QCoreApplication.translate("MainWindow", u"Help", None))
    # retranslateUi

